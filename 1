dtrace: system integrity protection is on, some features will not be available
dtrace: system integrity protection is on, some features will not be available
SYSCALL(args) 		 = return
SYSCALL(args) 		 = return
A Go function!
A Go function!
About to call a Go function!
Product: 276
It worked!
About to call a Go function!
Product: 276
It worked!
dtrace: error on enabled probe ID 2210 (ID 563: syscall::sysctl:return): invalid kernel access in action #10 at DIF offset 28
dtrace: error on enabled probe ID 2210 (ID 563: syscall::sysctl:return): invalid kernel access in action #10 at DIF offset 28
dtrace: error on enabled probe ID 2210 (ID 563: syscall::sysctl:return): invalid kernel access in action #10 at DIF offset 28
dtrace: error on enabled probe ID 2210 (ID 563: syscall::sysctl:return): invalid kernel access in action #10 at DIF offset 28
dtrace: error on enabled probe ID 2186 (ID 165: syscall::read:return): invalid kernel access in action #12 at DIF offset 68
dtrace: error on enabled probe ID 2186 (ID 165: syscall::read:return): invalid kernel access in action #12 at DIF offset 68
dtrace: error on enabled probe ID 2186 (ID 165: syscall::read:return): invalid kernel access in action #12 at DIF offset 68
dtrace: error on enabled probe ID 2186 (ID 165: syscall::read:return): invalid kernel access in action #12 at DIF offset 68
dtrace: error on enabled probe ID 2184 (ID 167: syscall::write:return): invalid kernel access in action #12 at DIF offset 68
dtrace: error on enabled probe ID 2184 (ID 167: syscall::write:return): invalid kernel access in action #12 at DIF offset 68
dtrace: error on enabled probe ID 2185 (ID 953: syscall::write_nocancel:return): invalid kernel access in action #12 at DIF offset 68
dtrace: error on enabled probe ID 2185 (ID 953: syscall::write_nocancel:return): invalid kernel access in action #12 at DIF offset 68
open("/dev/dtracehelper\0", 0x2, 0xFFFFFFFFE1996E80)		 = 3 0
ioctl(0x3, 0x80086804, 0x7FFEE1996D90)		 = 0 0
close(0x3)		 = 0 close0
mprotect(0x10E311000, 0x1000, 0x1)		 = 0 0
mprotect(0x10E269000, 0x1000, 0x1)		 = 0 0
access("/AppleInternal/XBS/.isChrooted\0", 0x0, 0x0)		 = -1 2
bsdthread_register(0x7FFF647FF82C, 0x7FFF647FF818, 0x2000)		 = 1073742047 er0
sysctlbyname(kern.bootargs, 0xD, 0x7FFEE1995EE0, 0x7FFEE1995ED0, 0x0)		 = 0 0
issetugid(0x0, 0x0, 0x0)		 = 0 0
ioctl(0x2, 0x4004667A, 0x7FFEE1996224)		 = -1 25
ioctl(0x2, 0x40487413, 0x7FFEE1996228)		 = -1 25
mprotect(0x10E482000, 0x1000, 0x0)		 = 0 0
mprotect(0x10E489000, 0x1000, 0x0)		 = 0 0
mprotect(0x10E48A000, 0x1000, 0x0)		 = 0 0
mprotect(0x10E491000, 0x1000, 0x0)		 = 0 0
mprotect(0x10E26E000, 0x90, 0x1)		 = 0 0
mprotect(0x10E270000, 0x1000, 0x1)		 = 0 0
mprotect(0x10E26E000, 0x90, 0x3)		 = 0 0
mprotect(0x10E26E000, 0x90, 0x1)		 = 0 0
getentropy(0x7FFEE1995730, 0x20, 0x0)		 = 0 0
getentropy(0x7FFEE1995780, 0x40, 0x0)		 = 0 0
getpid(0x0, 0x0, 0x0)		 = 16483 0
stat64("/AppleInternal\0", 0x7FFEE1996350, 0x0)		 = -1 2
csops_audittoken(0x4063, 0x7, 0x7FFEE1995EA0)		 = -1 22
proc_info(0x2, 0x4063, 0xD)		 = 64 0
csops_audittoken(0x4063, 0x7, 0x7FFEE1995720)		 = -1 22
sigaction(0x1, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x2, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x3, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x4, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x5, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x6, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x7, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x8, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x8, 0x7FFEE19962D8, 0x0)		 = 0 0
sigaction(0xA, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0xA, 0x7FFEE19962D8, 0x0)		 = 0 0
sigaction(0xB, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0xB, 0x7FFEE19962D8, 0x0)		 = 0 0
sigaction(0xC, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0xD, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0xD, 0x7FFEE19962D8, 0x0)		 = 0 0
sigaction(0xE, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0xF, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x10, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x14, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x17, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x18, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x19, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x1A, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x1B, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x1C, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x1D, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x1E, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x1F, 0x0, 0x7FFEE1996418)		 = 0 0
bsdthread_create(0x10E2CC3E0, 0x0, 0x700004BC2000)		 = 79437824 0
thread_selfid(0x0, 0x0, 0x0)		 = 11711642 0
getrlimit(0x1008, 0x7FFEE19976D0, 0x0)		 = 0 0
mmap(0x0, 0x40000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E492000 0
fstat64(0x1, 0x7FFEE19976B8, 0x0)		 = 0 0
mmap(0x0, 0x20000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E4D2000 0
mmap(0x0, 0x100000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E4F2000 0
mmap(0x0, 0x800000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E5F2000 0
mmap(0x0, 0x4000000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10EFFC000 0
mmap(0x0, 0x20000000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x112FFC000 0
open("/dev/urandom\0", 0x0, 0x0)		 = 3 0
close(0x3)		 = 0 close0
mmap(0xC000000000, 0x4000000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0xC000000000 0
mmap(0xC000000000, 0x4000000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0xC000000000 0
mmap(0x0, 0x2000000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x132FFC000 0
mmap(0x0, 0x210808, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x134FFC000 0
mmap(0x10E4D2000, 0x20000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E4D2000 0
madvise(0x10E4D2000, 0x20000, 0x8)		 = 0 0
mmap(0x10E572000, 0x1000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E572000 0
madvise(0x10E572000, 0x1000, 0x8)		 = 0 0
mmap(0x10E9F8000, 0x1000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E9F8000 0
madvise(0x10E9F8000, 0x1000, 0x8)		 = 0 0
mmap(0x11102C000, 0x1000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x11102C000 0
madvise(0x11102C000, 0x1000, 0x8)		 = 0 0
mmap(0x12317C000, 0x10open("/dev/dtracehelper\0", 0x2, 0xFFFFFFFFE1996E80)		 = 3 0
ioctl(0x3, 0x80086804, 0x7FFEE1996D90)		 = 0 0
close(0x3)		 = 0 close0
mprotect(0x10E311000, 0x1000, 0x1)		 = 0 0
mprotect(0x10E269000, 0x1000, 0x1)		 = 0 0
access("/AppleInternal/XBS/.isChrooted\0", 0x0, 0x0)		 = -1 2
bsdthread_register(0x7FFF647FF82C, 0x7FFF647FF818, 0x2000)		 = 1073742047 er0
sysctlbyname(kern.bootargs, 0xD, 0x7FFEE1995EE0, 0x7FFEE1995ED0, 0x0)		 = 0 0
issetugid(0x0, 0x0, 0x0)		 = 0 0
ioctl(0x2, 0x4004667A, 0x7FFEE1996224)		 = -1 25
ioctl(0x2, 0x40487413, 0x7FFEE1996228)		 = -1 25
mprotect(0x10E482000, 0x1000, 0x0)		 = 0 0
mprotect(0x10E489000, 0x1000, 0x0)		 = 0 0
mprotect(0x10E48A000, 0x1000, 0x0)		 = 0 0
mprotect(0x10E491000, 0x1000, 0x0)		 = 0 0
mprotect(0x10E26E000, 0x90, 0x1)		 = 0 0
mprotect(0x10E270000, 0x1000, 0x1)		 = 0 0
mprotect(0x10E26E000, 0x90, 0x3)		 = 0 0
mprotect(0x10E26E000, 0x90, 0x1)		 = 0 0
getentropy(0x7FFEE1995730, 0x20, 0x0)		 = 0 0
getentropy(0x7FFEE1995780, 0x40, 0x0)		 = 0 0
getpid(0x0, 0x0, 0x0)		 = 16483 0
stat64("/AppleInternal\0", 0x7FFEE1996350, 0x0)		 = -1 2
csops_audittoken(0x4063, 0x7, 0x7FFEE1995EA0)		 = -1 22
proc_info(0x2, 0x4063, 0xD)		 = 64 0
csops_audittoken(0x4063, 0x7, 0x7FFEE1995720)		 = -1 22
sigaction(0x1, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x2, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x3, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x4, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x5, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x6, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x7, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x8, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x8, 0x7FFEE19962D8, 0x0)		 = 0 0
sigaction(0xA, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0xA, 0x7FFEE19962D8, 0x0)		 = 0 0
sigaction(0xB, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0xB, 0x7FFEE19962D8, 0x0)		 = 0 0
sigaction(0xC, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0xD, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0xD, 0x7FFEE19962D8, 0x0)		 = 0 0
sigaction(0xE, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0xF, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x10, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x14, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x17, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x18, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x19, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x1A, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x1B, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x1C, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x1D, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x1E, 0x0, 0x7FFEE1996418)		 = 0 0
sigaction(0x1F, 0x0, 0x7FFEE1996418)		 = 0 0
bsdthread_create(0x10E2CC3E0, 0x0, 0x700004BC2000)		 = 79437824 0
thread_selfid(0x0, 0x0, 0x0)		 = 11711642 0
getrlimit(0x1008, 0x7FFEE19976D0, 0x0)		 = 0 0
mmap(0x0, 0x40000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E492000 0
fstat64(0x1, 0x7FFEE19976B8, 0x0)		 = 0 0
mmap(0x0, 0x20000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E4D2000 0
mmap(0x0, 0x100000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E4F2000 0
mmap(0x0, 0x800000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E5F2000 0
mmap(0x0, 0x4000000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10EFFC000 0
mmap(0x0, 0x20000000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x112FFC000 0
open("/dev/urandom\0", 0x0, 0x0)		 = 3 0
close(0x3)		 = 0 close0
mmap(0xC000000000, 0x4000000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0xC000000000 0
mmap(0xC000000000, 0x4000000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0xC000000000 0
mmap(0x0, 0x2000000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x132FFC000 0
mmap(0x0, 0x210808, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x134FFC000 0
mmap(0x10E4D2000, 0x20000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E4D2000 0
madvise(0x10E4D2000, 0x20000, 0x8)		 = 0 0
mmap(0x10E572000, 0x1000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E572000 0
madvise(0x10E572000, 0x1000, 0x8)		 = 0 0
mmap(0x10E9F8000, 0x1000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10E9F8000 0
madvise(0x10E9F8000, 0x1000, 0x8)		 = 0 0
mmap(0x11102C000, 0x1000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x11102C000 0
madvise(0x11102C000, 0x1000, 0x8)		 = 0 0
mmap(0x12317C000, 0x1000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x12317C000 0
madvise(0x12317C000, 0x1000, 0x8)		 = 0 0
mmap(0x0, 0x100000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10EDF2000 0
mmap(0x0, 0x10000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x13520D000 0
mmap(0x0, 0x10000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x13521D000 0
madvise(0xC000000000, 0x2000, 0x8)		 = 0 0
madvise(0xC000002000, 0x8000, 0x8)		 = 0 0
madvise(0xC00000A000, 0x2000, 0x8)		 = 0 0
madvise(0xC00000C000, 0x2000, 0x8)		 = 0 0
open("/dev/urandom\0", 0x0, 0x0)		 = 3 0
close(0x3)		 = 0 close0
madvise(0xC00000E000, 0x2000, 0x8)		 = 0 0
madvise(0xC000010000, 0x2000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x0, 0x10E3F20A0)		 = 0 k0
madvise(0xC000012000, 0x2000, 0x8)		 = 0 0
madvise(0xC000014000, 0x2000, 0x8)		 = 0 0
madvise(0xC000016000, 0x2000, 0x8)		 = 0 0
madvise(0xC000018000, 0x2000, 0x8)		 = 0 0
madvise(0xC00001A000, 0x2000, 0x8)		 = 0 0
madvise(0xC00001C000, 0x2000, 0x8)		 = 0 0
madvise(0xC00001E000, 0x2000, 0x8)		 = 0 0
madvise(0xC000020000, 0x2000, 0x8)		 = 0 0
madvise(0xC000022000, 0x2000, 0x8)		 = 0 0
madvise(0xC000024000, 0xA000, 0x8)		 = 0 0
madvise(0xC00002E000, 0xA000, 0x8)		 = 0 0
madvise(0xC000038000, 0x8000, 0x8)		 = 0 0
sigaltstack(0x0, 0x700004BC1F08, 0x0)		 = 0 0
sigaltstack(0x700004BC1EC8, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x700004BC1F1C, 0x0)		 = 0 k0
madvise(0xC000040000, 0x2000, 0x8)		 = 0 0
madvise(0xC000042000, 0x8000, 0x8)		 = 0 0
madvise(0xC00004A000, 0x8000, 0x8)		 = 0 0
madvise(0xC000052000, 0x8000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004BC1E1C, 0x700004BC1E0C)		 = 0 k0
bsdthread_create(0x10E3106D0, 0x7FB493500000, 0x700004C45000)		 = 79974400 0
__pthread_sigmask(0x3, 0x700004BC1E0C, 0x0)		 = 0 k0
thread_selfid(0x0, 0x0, 0x0)		 = 11711643 0
madvise(0xC00005A000, 0x8000, 0x8)		 = 0 0
sigaltstack(0x0, 0x700004C44EE0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x700004BC1D6C, 0x700004BC1D5C)		 = 0 k0
sigaltstack(0x700004C44EA0, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x700004C44EF4, 0x0)		 = 0 k0
bsdthread_create(0x10E3106D0, 0x7FB493500000, 0x700004CC8000)		 = 80510976 0
__pthread_sigmask(0x3, 0x700004BC1D5C, 0x0)		 = 0 k0
madvise(0xC000062000, 0x2000, 0x8)		 = 0 0
thread_selfid(0x0, 0x0, 0x0)		 = 11711644 0
sigaltstack(0x0, 0x700004CC7EE0, 0x0)		 = 0 0
madvise(0xC000064000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
sigaltstack(0x700004CC7EA0, 0x0, 0x0)		 = 0 0
madvise(0xC000066000, 0x8000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004CC7EF4, 0x0)		 = 0 k0
__pthread_sigmask(0x3, 0x700004BC1D0C, 0x700004BC1CFC)		 = 0 k0
mmap(0x0, 0x40000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x13522D000 0
bsdthread_create(0x10E3106D0, 0x7FB493500000, 0x700004D4B000)		 = 81047552 0
madvise(0xC000080000, 0x2000, 0x8)		 = 0 0
thread_selfid(0x0, 0x0, 0x0)		 = 11711645 0
__pthread_sigmask(0x3, 0x700004BC1CFC, 0x0)		 = 0 k0
sigaltstack(0x0, 0x700004D4AEE0, 0x0)		 = 0 0
madvise(0xC000082000, 0x2000, 0x8)		 = 0 0
sigaltstack(0x700004D4AEA0, 0x0, 0x0)		 = 0 0
madvise(0xC000084000, 0x8000, 0x8)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
__pthread_sigmask(0x3, 0x700004D4AEF4, 0x0)		 = 0 k0
madvise(0xC00008C000, 0x2000, 0x8)		 = 0 0
madvise(0xC00006E000, 0x2000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004CC7D3C, 0x700004CC7D2C)		 = 0 k0
psynch_cvsignal(0x10E3F23A8, 0x100, 0x0)		 = 257 0
psynch_cvwait(0x10E3F23A8, 0x100000100, 0x0)		 = 0 0
bsdthread_create(0x10E3106D0, 0x7FB493600000, 0x700004DCE000)		 = 81584128 0
psynch_mutexdrop(0x10E3F2368, 0x100, 0x100)		 = 0 0
__pthread_sigmask(0x3, 0x700004CC7D2C, 0x0)		 = 0 k0
psynch_mutexwait(0x10E3F2368, 0x102, 0x0)		 = 259 0
__pthread_kill(0x1303, 0x10, 0x0)		 = 0 0
madvise(0xC000070000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
madvise(0xC000072000, 0x8000, 0x8)		 = 0 0
thread_selfid(0x0, 0x0, 0x0)		 = 11711646 0
__pthread_sigmask(0x3, 0x700004BC1EBC, 0x700004BC1EAC)		 = 0 k0
sigaltstack(0x0, 0x700004DCDEE0, 0x0)		 = 0 0
sigaltstack(0x700004DCDEA0, 0x0, 0x0)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
bsdthread_create(0x10E3106D0, 0x7FB49350000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x12317C000 0
madvise(0x12317C000, 0x1000, 0x8)		 = 0 0
mmap(0x0, 0x100000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10EDF2000 0
mmap(0x0, 0x10000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x13520D000 0
mmap(0x0, 0x10000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x13521D000 0
madvise(0xC000000000, 0x2000, 0x8)		 = 0 0
madvise(0xC000002000, 0x8000, 0x8)		 = 0 0
madvise(0xC00000A000, 0x2000, 0x8)		 = 0 0
madvise(0xC00000C000, 0x2000, 0x8)		 = 0 0
open("/dev/urandom\0", 0x0, 0x0)		 = 3 0
close(0x3)		 = 0 close0
madvise(0xC00000E000, 0x2000, 0x8)		 = 0 0
madvise(0xC000010000, 0x2000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x0, 0x10E3F20A0)		 = 0 k0
madvise(0xC000012000, 0x2000, 0x8)		 = 0 0
madvise(0xC000014000, 0x2000, 0x8)		 = 0 0
madvise(0xC000016000, 0x2000, 0x8)		 = 0 0
madvise(0xC000018000, 0x2000, 0x8)		 = 0 0
madvise(0xC00001A000, 0x2000, 0x8)		 = 0 0
madvise(0xC00001C000, 0x2000, 0x8)		 = 0 0
madvise(0xC00001E000, 0x2000, 0x8)		 = 0 0
madvise(0xC000020000, 0x2000, 0x8)		 = 0 0
madvise(0xC000022000, 0x2000, 0x8)		 = 0 0
madvise(0xC000024000, 0xA000, 0x8)		 = 0 0
madvise(0xC00002E000, 0xA000, 0x8)		 = 0 0
madvise(0xC000038000, 0x8000, 0x8)		 = 0 0
sigaltstack(0x0, 0x700004BC1F08, 0x0)		 = 0 0
sigaltstack(0x700004BC1EC8, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x700004BC1F1C, 0x0)		 = 0 k0
madvise(0xC000040000, 0x2000, 0x8)		 = 0 0
madvise(0xC000042000, 0x8000, 0x8)		 = 0 0
madvise(0xC00004A000, 0x8000, 0x8)		 = 0 0
madvise(0xC000052000, 0x8000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004BC1E1C, 0x700004BC1E0C)		 = 0 k0
bsdthread_create(0x10E3106D0, 0x7FB493500000, 0x700004C45000)		 = 79974400 0
__pthread_sigmask(0x3, 0x700004BC1E0C, 0x0)		 = 0 k0
thread_selfid(0x0, 0x0, 0x0)		 = 11711643 0
madvise(0xC00005A000, 0x8000, 0x8)		 = 0 0
sigaltstack(0x0, 0x700004C44EE0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x700004BC1D6C, 0x700004BC1D5C)		 = 0 k0
sigaltstack(0x700004C44EA0, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x700004C44EF4, 0x0)		 = 0 k0
bsdthread_create(0x10E3106D0, 0x7FB493500000, 0x700004CC8000)		 = 80510976 0
__pthread_sigmask(0x3, 0x700004BC1D5C, 0x0)		 = 0 k0
madvise(0xC000062000, 0x2000, 0x8)		 = 0 0
thread_selfid(0x0, 0x0, 0x0)		 = 11711644 0
sigaltstack(0x0, 0x700004CC7EE0, 0x0)		 = 0 0
madvise(0xC000064000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
sigaltstack(0x700004CC7EA0, 0x0, 0x0)		 = 0 0
madvise(0xC000066000, 0x8000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004CC7EF4, 0x0)		 = 0 k0
__pthread_sigmask(0x3, 0x700004BC1D0C, 0x700004BC1CFC)		 = 0 k0
mmap(0x0, 0x40000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x13522D000 0
bsdthread_create(0x10E3106D0, 0x7FB493500000, 0x700004D4B000)		 = 81047552 0
madvise(0xC000080000, 0x2000, 0x8)		 = 0 0
thread_selfid(0x0, 0x0, 0x0)		 = 11711645 0
__pthread_sigmask(0x3, 0x700004BC1CFC, 0x0)		 = 0 k0
sigaltstack(0x0, 0x700004D4AEE0, 0x0)		 = 0 0
madvise(0xC000082000, 0x2000, 0x8)		 = 0 0
sigaltstack(0x700004D4AEA0, 0x0, 0x0)		 = 0 0
madvise(0xC000084000, 0x8000, 0x8)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
__pthread_sigmask(0x3, 0x700004D4AEF4, 0x0)		 = 0 k0
madvise(0xC00008C000, 0x2000, 0x8)		 = 0 0
madvise(0xC00006E000, 0x2000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004CC7D3C, 0x700004CC7D2C)		 = 0 k0
psynch_cvsignal(0x10E3F23A8, 0x100, 0x0)		 = 257 0
psynch_cvwait(0x10E3F23A8, 0x100000100, 0x0)		 = 0 0
bsdthread_create(0x10E3106D0, 0x7FB493600000, 0x700004DCE000)		 = 81584128 0
psynch_mutexdrop(0x10E3F2368, 0x100, 0x100)		 = 0 0
__pthread_sigmask(0x3, 0x700004CC7D2C, 0x0)		 = 0 k0
psynch_mutexwait(0x10E3F2368, 0x102, 0x0)		 = 259 0
__pthread_kill(0x1303, 0x10, 0x0)		 = 0 0
madvise(0xC000070000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
madvise(0xC000072000, 0x8000, 0x8)		 = 0 0
thread_selfid(0x0, 0x0, 0x0)		 = 11711646 0
__pthread_sigmask(0x3, 0x700004BC1EBC, 0x700004BC1EAC)		 = 0 k0
sigaltstack(0x0, 0x700004DCDEE0, 0x0)		 = 0 0
sigaltstack(0x700004DCDEA0, 0x0, 0x0)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
bsdthread_create(0x10E3106D0, 0x7FB493500000, 0x700004E51000)		 = 82120704 0
__pthread_sigmask(0x3, 0x700004DCDEF4, 0x0)		 = 0 k0
__pthread_sigmask(0x3, 0x700004BC1EAC, 0x0)		 = 0 k0
thread_selfid(0x0, 0x0, 0x0)		 = 11711647 0
sigaltstack(0x0, 0x700004E50EE0, 0x0)		 = 0 0
psynch_cvbroad(0x10E3F0FF0, 0x100, 0x100)		 = 257 0
psynch_cvwait(0x10E3F0FF0, 0x100000100, 0x0)		 = 0 0
sigaltstack(0x700004E50EA0, 0x0, 0x0)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
__pthread_sigmask(0x3, 0x700004E50EF4, 0x0)		 = 0 k0
__pthread_sigmask(0x3, 0x0, 0xC000040080)		 = 0 k0
madvise(0xC00007A000, 0x2000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x10E3DC0F0, 0x0)		 = 0 k0
sigaltstack(0x0, 0x7FFEE1997860, 0x0)		 = 0 0
madvise(0xC00007C000, 0x2000, 0x8)		 = 0 0
sigaltstack(0x7FFEE1997820, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFEE1997874, 0x0)		 = 0 k0
madvise(0xC00007E000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
__pthread_kill(0x40B, 0x10, 0x0)		 = 0 0
madvise(0xC000100000, 0x2000, 0x8)		 = 0 0
madvise(0xC000102000, 0x2000, 0x8)		 = 0 0
madvise(0xC000104000, 0x8000, 0x8)		 = 0 0
madvise(0xC000180000, 0x2000, 0x8)		 = 0 0
madvise(0xC00010C000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
madvise(0xC000182000, 0x4000, 0x8)		 = 0 0
__pthread_kill(0x40B, 0x10, 0x0)		 = 0 0
psynch_cvsignal(0xC000080388, 0x100, 0x0)		 = 257 0
psynch_cvwait(0xC000080388, 0x100000100, 0x0)		 = 0 0
madvise(0xC000186000, 0x2000, 0x8)		 = 0 0
psynch_cvsignal(0xC000040388, 0x100, 0x0)		 = 257 0
psynch_cvwait(0xC000040388, 0x100000100, 0x0)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
madvise(0xC00010E000, 0x2000, 0x8)		 = 0 0
madvise(0xC000188000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
fcntl(0x0, 0x3, 0x0)		 = 2 0
psynch_cvsignal(0xC000080388, 0x10000000200, 0x100)		 = 257 0
psynch_cvwait(0xC000080388, 0x10100000200, 0x100)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
mmap(0x0, 0x40000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x13526D000 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
fcntl(0x1, 0x3, 0x0)		 = 1 0
psynch_cvsignal(0xC000040B88, 0x100, 0x0)		 = 257 0
fcntl(0x2, 0x3, 0x0)		 = 1 0
psynch_cvwait(0xC000040B88, 0x100000100, 0x0)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
stat64(".\0", 0xC00007C928, 0x0)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
stat64("/Users/zjjfly/GoProjects/src/github.com/zjjfly/MasteringGo\0", 0xC00007CAC8, 0x0)		 = 0 0
psynch_cvsignal(0xC000040B88, 0x10000000200, 0x100)		 = 257 0
psynch_cvwait(0xC000040B88, 0x10100000200, 0x100)		 = 0 0
psynch_cvsignal(0xC000040388, 0x10000000200, 0x100)		 = 257 0
psynch_cvwait(0xC000040388, 0x10100000200, 0x100)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
__pthread_sigmask(0x3, 0x10E3DC0F0, 0x0)		 = 0 k0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
sigaltstack(0x7FFEE1997878, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFEE19978BC, 0x0)		 = 0 k0
__pthread_sigmask(0x3, 0x0, 0xC000040080)		 = 0 k0
__pthread_sigmask(0x3, 0x10E3DC0F0, 0x0)		 = 0 k0
sigaltstack(0x0, 0x7FFEE1997840, 0x0)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
sigaltstack(0x7FFEE1997800, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFEE1997854, 0x0)		 = 0 k0
__pthread_sigmask(0x3, 0x10E3DC0F0, 0x0)		 = 0 k0
sigaltstack(0x7FFEE1997858, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFEE199789C, 0x0)		 = 0 k0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
psynch_cvwait(0x10E3F23A8, 0x10100000200, 0x100)		 = -1 260
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 4
psynch_cvwait(0xC000040B88, 0x20100000300, 0x200)		 = -1 260
psynch_cvwait(0xC000040F88, 0x100000100, 0x0)		 = -1 260
psynch_cvwait(0xC000080388, 0x20100000300, 0x200)		 = -1 260
psynch_cvwait(0xC000041388, 0x100000100, 0x0)		 = -1 260

CALL                                        COUNT
access                                          1
bsdthread_register                              1
exit                                            1
fstat64                                         1
getpid                                          1
getrlimit                        000, 0x700004E51000)		 = 82120704 0
__pthread_sigmask(0x3, 0x700004DCDEF4, 0x0)		 = 0 k0
__pthread_sigmask(0x3, 0x700004BC1EAC, 0x0)		 = 0 k0
thread_selfid(0x0, 0x0, 0x0)		 = 11711647 0
sigaltstack(0x0, 0x700004E50EE0, 0x0)		 = 0 0
psynch_cvbroad(0x10E3F0FF0, 0x100, 0x100)		 = 257 0
psynch_cvwait(0x10E3F0FF0, 0x100000100, 0x0)		 = 0 0
sigaltstack(0x700004E50EA0, 0x0, 0x0)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
__pthread_sigmask(0x3, 0x700004E50EF4, 0x0)		 = 0 k0
__pthread_sigmask(0x3, 0x0, 0xC000040080)		 = 0 k0
madvise(0xC00007A000, 0x2000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x10E3DC0F0, 0x0)		 = 0 k0
sigaltstack(0x0, 0x7FFEE1997860, 0x0)		 = 0 0
madvise(0xC00007C000, 0x2000, 0x8)		 = 0 0
sigaltstack(0x7FFEE1997820, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFEE1997874, 0x0)		 = 0 k0
madvise(0xC00007E000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
__pthread_kill(0x40B, 0x10, 0x0)		 = 0 0
madvise(0xC000100000, 0x2000, 0x8)		 = 0 0
madvise(0xC000102000, 0x2000, 0x8)		 = 0 0
madvise(0xC000104000, 0x8000, 0x8)		 = 0 0
madvise(0xC000180000, 0x2000, 0x8)		 = 0 0
madvise(0xC00010C000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
madvise(0xC000182000, 0x4000, 0x8)		 = 0 0
__pthread_kill(0x40B, 0x10, 0x0)		 = 0 0
psynch_cvsignal(0xC000080388, 0x100, 0x0)		 = 257 0
psynch_cvwait(0xC000080388, 0x100000100, 0x0)		 = 0 0
madvise(0xC000186000, 0x2000, 0x8)		 = 0 0
psynch_cvsignal(0xC000040388, 0x100, 0x0)		 = 257 0
psynch_cvwait(0xC000040388, 0x100000100, 0x0)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
madvise(0xC00010E000, 0x2000, 0x8)		 = 0 0
madvise(0xC000188000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
fcntl(0x0, 0x3, 0x0)		 = 2 0
psynch_cvsignal(0xC000080388, 0x10000000200, 0x100)		 = 257 0
psynch_cvwait(0xC000080388, 0x10100000200, 0x100)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
mmap(0x0, 0x40000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x13526D000 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
fcntl(0x1, 0x3, 0x0)		 = 1 0
psynch_cvsignal(0xC000040B88, 0x100, 0x0)		 = 257 0
fcntl(0x2, 0x3, 0x0)		 = 1 0
psynch_cvwait(0xC000040B88, 0x100000100, 0x0)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
stat64(".\0", 0xC00007C928, 0x0)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
stat64("/Users/zjjfly/GoProjects/src/github.com/zjjfly/MasteringGo\0", 0xC00007CAC8, 0x0)		 = 0 0
psynch_cvsignal(0xC000040B88, 0x10000000200, 0x100)		 = 257 0
psynch_cvwait(0xC000040B88, 0x10100000200, 0x100)		 = 0 0
psynch_cvsignal(0xC000040388, 0x10000000200, 0x100)		 = 257 0
psynch_cvwait(0xC000040388, 0x10100000200, 0x100)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
__pthread_sigmask(0x3, 0x10E3DC0F0, 0x0)		 = 0 k0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
sigaltstack(0x7FFEE1997878, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFEE19978BC, 0x0)		 = 0 k0
__pthread_sigmask(0x3, 0x0, 0xC000040080)		 = 0 k0
__pthread_sigmask(0x3, 0x10E3DC0F0, 0x0)		 = 0 k0
sigaltstack(0x0, 0x7FFEE1997840, 0x0)		 = 0 0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
sigaltstack(0x7FFEE1997800, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFEE1997854, 0x0)		 = 0 k0
__pthread_sigmask(0x3, 0x10E3DC0F0, 0x0)		 = 0 k0
sigaltstack(0x7FFEE1997858, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFEE199789C, 0x0)		 = 0 k0
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 60
psynch_cvwait(0x10E3F23A8, 0x10100000200, 0x100)		 = -1 260
__semwait_signal(0xA03, 0x0, 0x1)		 = -1 4
psynch_cvwait(0xC000040B88, 0x20100000300, 0x200)		 = -1 260
psynch_cvwait(0xC000040F88, 0x100000100, 0x0)		 = -1 260
psynch_cvwait(0xC000080388, 0x20100000300, 0x200)		 = -1 260
psynch_cvwait(0xC000041388, 0x100000100, 0x0)		 = -1 260

CALL                                        COUNT
access                                          1
bsdthread_register                              1
exit                                            1
fstat64                                         1
getpid                                          1
getrlimit                                       1
issetugid                                       1
proc_info                                       1
psynch_cvbroad                                  1
psynch_mutexdrop                                1
psynch_mutexwait                                1
sysctlbyname                                    1
write                                           1
write_nocancel                                  1
csops_audittoken                                2
getentropy                                      2
read                                            2
sysctl                                          2
__pthread_kill                                  3
close                                           3
fcntl                                           3
ioctl                                           3
open                                            3
stat64                                          3
bsdthread_create                                6
thread_selfid                                   6
psynch_cvsignal                                 7
mprotect                                       10
psynch_cvwait                                  13
sigaltstack                                    18
__semwait_signal                               19
mmap                                           20
__pthread_sigmask                              27
sigaction                                      29
madvise                                        50
               1
issetugid                                       1
proc_info                                       1
psynch_cvbroad                                  1
psynch_mutexdrop                                1
psynch_mutexwait                                1
sysctlbyname                                    1
write                                           1
write_nocancel                                  1
csops_audittoken                                2
getentropy                                      2
read                                            2
sysctl                                          2
__pthread_kill                                  3
close                                           3
fcntl                                           3
ioctl                                           3
open                                            3
stat64                                          3
bsdthread_create                                6
thread_selfid                                   6
psynch_cvsignal                                 7
mprotect                                       10
psynch_cvwait                                  13
sigaltstack                                    18
__semwait_signal                               19
mmap                                           20
__pthread_sigmask                              27
sigaction                                      29
madvise                                        50


