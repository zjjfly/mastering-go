dtrace: system integrity protection is on, some features will not be available
SYSCALL(args) 		 = return
A Go function!
About to call a Go function!
Product: 276
It worked!
dtrace: error on enabled probe ID 2210 (ID 563: syscall::sysctl:return): invalid kernel access in action #10 at DIF offset 28
dtrace: error on enabled probe ID 2210 (ID 563: syscall::sysctl:return): invalid kernel access in action #10 at DIF offset 28
dtrace: error on enabled probe ID 2186 (ID 165: syscall::read:return): invalid kernel access in action #12 at DIF offset 68
open("/dev/dtracehelper\0", 0x2, 0xFFFFFFFFEDBD2E80)		 = 3 0
ioctl(0x3, 0x80086804, 0x7FFEEDBD2D90)		 = 0 0
close(0x3)		 = 0 close0
mprotect(0x1020D1000, 0x1000, 0x1)		 = 0 0
mprotect(0x10202D000, 0x1000, 0x1)		 = 0 0
access("/AppleInternal/XBS/.isChrooted\0", 0x0, 0x0)		 = -1 2
bsdthread_register(0x7FFF647FF82C, 0x7FFF647FF818, 0x2000)		 = 1073742047 er0
sysctlbyname(kern.bootargs, 0xD, 0x7FFEEDBD1EE0, 0x7FFEEDBD1ED0, 0x0)		 = 0 0
issetugid(0x0, 0x0, 0x0)		 = 0 0
ioctl(0x2, 0x4004667A, 0x7FFEEDBD2224)		 = -1 25
ioctl(0x2, 0x40487413, 0x7FFEEDBD2228)		 = -1 25
mprotect(0x102244000, 0x1000, 0x0)		 = 0 0
mprotect(0x10224B000, 0x1000, 0x0)		 = 0 0
mprotect(0x10224C000, 0x1000, 0x0)		 = 0 0
mprotect(0x102253000, 0x1000, 0x0)		 = 0 0
mprotect(0x102242000, 0x90, 0x1)		 = 0 0
mprotect(0x102254000, 0x1000, 0x1)		 = 0 0
mprotect(0x102242000, 0x90, 0x3)		 = 0 0
mprotect(0x102242000, 0x90, 0x1)		 = 0 0
getentropy(0x7FFEEDBD1730, 0x20, 0x0)		 = 0 0
getentropy(0x7FFEEDBD1780, 0x40, 0x0)		 = 0 0
getpid(0x0, 0x0, 0x0)		 = 16542 0
stat64("/AppleInternal\0", 0x7FFEEDBD2350, 0x0)		 = -1 2
csops_audittoken(0x409E, 0x7, 0x7FFEEDBD1EA0)		 = -1 22
proc_info(0x2, 0x409E, 0xD)		 = 64 0
csops_audittoken(0x409E, 0x7, 0x7FFEEDBD1720)		 = -1 22
sigaction(0x1, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x2, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x3, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x4, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x5, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x6, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x7, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x8, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x8, 0x7FFEEDBD22D8, 0x0)		 = 0 0
sigaction(0xA, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0xA, 0x7FFEEDBD22D8, 0x0)		 = 0 0
sigaction(0xB, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0xB, 0x7FFEEDBD22D8, 0x0)		 = 0 0
sigaction(0xC, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0xD, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0xD, 0x7FFEEDBD22D8, 0x0)		 = 0 0
sigaction(0xE, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0xF, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x10, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x14, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x17, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x18, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x19, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x1A, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x1B, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x1C, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x1D, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x1E, 0x0, 0x7FFEEDBD2418)		 = 0 0
sigaction(0x1F, 0x0, 0x7FFEEDBD2418)		 = 0 0
bsdthread_create(0x10208C3E0, 0x0, 0x700004DF2000)		 = 81731584 0
thread_selfid(0x0, 0x0, 0x0)		 = 11711926 0
getrlimit(0x1008, 0x7FFEEDBD36D0, 0x0)		 = 0 0
fstat64(0x1, 0x7FFEEDBD36B8, 0x0)		 = 0 0
mmap(0x0, 0x40000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x102255000 0
mmap(0x0, 0x20000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x102295000 0
mmap(0x0, 0x100000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x1022B5000 0
mmap(0x0, 0x800000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x1023B5000 0
mmap(0x0, 0x4000000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x102BB5000 0
mmap(0x0, 0x20000000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x10F4ED000 0
open("/dev/urandom\0", 0x0, 0x0)		 = 3 0
close(0x3)		 = 0 close0
mmap(0xC000000000, 0x4000000, 0x0, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0xC000000000 0
mmap(0xC000000000, 0x4000000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0xC000000000 0
mmap(0x0, 0x2000000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x106BB5000 0
mmap(0x0, 0x210808, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x108BB5000 0
mmap(0x102295000, 0x20000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x102295000 0
madvise(0x102295000, 0x20000, 0x8)		 = 0 0
mmap(0x102335000, 0x1000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x102335000 0
madvise(0x102335000, 0x1000, 0x8)		 = 0 0
mmap(0x1027BB000, 0x1000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x1027BB000 0
madvise(0x1027BB000, 0x1000, 0x8)		 = 0 0
mmap(0x104BE5000, 0x1000, 0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x104BE5000 0
madvise(0x104BE5000, 0x1000, 0x8)		 = 0 0
mmap(0x11F66D000, 0x1000, dtrace: error on enabled probe ID 2186 (ID 165: syscall::read:return): invalid kernel access in action #12 at DIF offset 68
0x3, 0x1012, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x11F66D000 0
madvise(0x11F66D000, 0x1000, 0x8)		 = 0 0
mmap(0x0, 0x100000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x108DC6000 0
mmap(0x0, 0x10000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x108EC6000 0
mmap(0x0, 0x10000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x108ED6000 0
madvise(0xC000000000, 0x2000, 0x8)		 = 0 0
madvise(0xC000002000, 0x8000, 0x8)		 = 0 0
madvise(0xC00000A000, 0x2000, 0x8)		 = 0 0
madvise(0xC00000C000, 0x2000, 0x8)		 = 0 0
open("/dev/urandom\0", 0x0, 0x0)		 = 3 0
close(0x3)		 = 0 close0
madvise(0xC00000E000, 0x2000, 0x8)		 = 0 0
madvise(0xC000010000, 0x2000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x0, 0x1021B20A0)		 = 0 k0
madvise(0xC000012000, 0x2000, 0x8)		 = 0 0
madvise(0xC000014000, 0x2000, 0x8)		 = 0 0
madvise(0xC000016000, 0x2000, 0x8)		 = 0 0
madvise(0xC000018000, 0x2000, 0x8)		 = 0 0
madvise(0xC00001A000, 0x2000, 0x8)		 = 0 0
madvise(0xC00001C000, 0x2000, 0x8)		 = 0 0
madvise(0xC00001E000, 0x2000, 0x8)		 = 0 0
madvise(0xC000020000, 0x2000, 0x8)		 = 0 0
madvise(0xC000022000, 0x2000, 0x8)		 = 0 0
madvise(0xC000024000, 0xA000, 0x8)		 = 0 0
madvise(0xC00002E000, 0xA000, 0x8)		 = 0 0
madvise(0xC000038000, 0x8000, 0x8)		 = 0 0
sigaltstack(0x0, 0x700004DF1F08, 0x0)		 = 0 0
sigaltstack(0x700004DF1EC8, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x700004DF1F1C, 0x0)		 = 0 k0
madvise(0xC000040000, 0x2000, 0x8)		 = 0 0
madvise(0xC000042000, 0x8000, 0x8)		 = 0 0
madvise(0xC00004A000, 0x8000, 0x8)		 = 0 0
madvise(0xC000052000, 0x8000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004DF1E1C, 0x700004DF1E0C)		 = 0 k0
bsdthread_create(0x1020D06D0, 0x7FAFDBD00000, 0x700004E75000)		 = 82268160 0
__pthread_sigmask(0x3, 0x700004DF1E0C, 0x0)		 = 0 k0
thread_selfid(0x0, 0x0, 0x0)		 = 11711927 0
madvise(0xC00005A000, 0x8000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004DF1D6C, 0x700004DF1D5C)		 = 0 k0
sigaltstack(0x0, 0x700004E74EE0, 0x0)		 = 0 0
bsdthread_create(0x1020D06D0, 0x7FAFDBD00020, 0x700004EF8000)		 = 82804736 0
sigaltstack(0x700004E74EA0, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x700004DF1D5C, 0x0)		 = 0 k0
thread_selfid(0x0, 0x0, 0x0)		 = 11711928 0
__pthread_sigmask(0x3, 0x700004E74EF4, 0x0)		 = 0 k0
madvise(0xC000062000, 0x2000, 0x8)		 = 0 0
sigaltstack(0x0, 0x700004EF7EE0, 0x0)		 = 0 0
sigaltstack(0x700004EF7EA0, 0x0, 0x0)		 = 0 0
madvise(0xC000064000, 0x2000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004EF7EF4, 0x0)		 = 0 k0
madvise(0xC000066000, 0x8000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004DF1D0C, 0x700004DF1CFC)		 = 0 k0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
mmap(0x0, 0x40000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x108EE6000 0
bsdthread_create(0x1020D06D0, 0x7FAFDBD00020, 0x700004F7B000)		 = 83341312 0
madvise(0xC000080000, 0x2000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004DF1CFC, 0x0)		 = 0 k0
thread_selfid(0x0, 0x0, 0x0)		 = 11711929 0
madvise(0xC000082000, 0x2000, 0x8)		 = 0 0
sigaltstack(0x0, 0x700004F7AEE0, 0x0)		 = 0 0
madvise(0xC000084000, 0x8000, 0x8)		 = 0 0
sigaltstack(0x700004F7AEA0, 0x0, 0x0)		 = 0 0
madvise(0xC00008C000, 0x2000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004F7AEF4, 0x0)		 = 0 k0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
madvise(0xC00006E000, 0x2000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004EF7D3C, 0x700004EF7D2C)		 = 0 k0
bsdthread_create(0x1020D06D0, 0x7FAFDBE00000, 0x700004FFE000)		 = 83877888 0
psynch_cvsignal(0x1021B23A8, 0x100, 0x0)		 = 2 0
__pthread_sigmask(0x3, 0x700004EF7D2C, 0x0)		 = 0 k0
psynch_cvwait(0x1021B23A8, 0x100000100, 0x0)		 = 257 0
__pthread_kill(0xC03, 0x10, 0x0)		 = 0 0
psynch_cvclrprepost(0x1021B23A8, 0x100, 0x100)		 = 0 ost0
madvise(0xC000070000, 0x2000, 0x8)		 = 0 0
thread_selfid(0x0, 0x0, 0x0)		 = 11711930 0
sigaltstack(0x0, 0x700004FFDEE0, 0x0)		 = 0 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
sigaltstack(0x700004FFDEA0, 0x0, 0x0)		 = 0 0
madvise(0xC000072000, 0x8000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x700004FFDEF4, 0x0)		 = 0 k0
__pthread_sigmask(0x3, 0x700004DF1EBC, 0x700004DF1EAC)		 = 0 k0
__semwait_signal(0x1403, 0x0, 0x1)		 = dtrace: error on enabled probe ID 2184 (ID 167: syscall::write:return): invalid kernel access in action #12 at DIF offset 68
dtrace: error on enabled probe ID 2185 (ID 953: syscall::write_nocancel:return): invalid kernel access in action #12 at DIF offset 68
-1 60
bsdthread_create(0x1020D06D0, 0x7FAFDBF00000, 0x700005081000)		 = 84414464 0
__pthread_sigmask(0x3, 0x700004DF1EAC, 0x0)		 = 0 k0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
thread_selfid(0x0, 0x0, 0x0)		 = 11711931 0
psynch_cvbroad(0x1021B0FF0, 0x100, 0x100)		 = 257 0
psynch_cvwait(0x1021B0FF0, 0x100000100, 0x0)		 = 0 0
psynch_cvsignal(0xC000080388, 0x100, 0x0)		 = 257 0
psynch_cvwait(0xC000080388, 0x100000100, 0x0)		 = 0 0
__pthread_kill(0xB03, 0x10, 0x0)		 = 0 0
sigaltstack(0x0, 0x700005080EE0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x0, 0xC000040080)		 = 0 k0
madvise(0xC000100000, 0x2000, 0x8)		 = 0 0
__pthread_sigmask(0x3, 0x10219C0F0, 0x0)		 = 0 k0
sigaltstack(0x700005080EA0, 0x0, 0x0)		 = 0 0
psynch_cvsignal(0xC000080388, 0x10000000200, 0x100)		 = 2 0
psynch_cvwait(0xC000080388, 0x10100000200, 0x100)		 = 257 0
sigaltstack(0x0, 0x7FFEEDBD3860, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x700005080EF4, 0x0)		 = 0 k0
sigaltstack(0x7FFEEDBD3820, 0x0, 0x0)		 = 0 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
__pthread_sigmask(0x3, 0x7FFEEDBD3874, 0x0)		 = 0 k0
psynch_cvclrprepost(0xC000080388, 0x200, 0x200)		 = 0 ost0
psynch_cvsignal(0x1021B23A8, 0x10000000200, 0x100)		 = 257 0
madvise(0xC000180000, 0x8000, 0x8)		 = 0 0
psynch_cvwait(0x1021B23A8, 0x10100000200, 0x100)		 = 0 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
madvise(0xC000102000, 0x2000, 0x8)		 = 0 0
madvise(0xC000104000, 0x2000, 0x8)		 = 0 0
madvise(0xC000106000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
madvise(0xC000108000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
madvise(0xC00010A000, 0x2000, 0x8)		 = 0 0
madvise(0xC00010C000, 0x4000, 0x8)		 = 0 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
madvise(0xC000110000, 0x2000, 0x8)		 = 0 0
madvise(0xC000112000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
madvise(0xC000114000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
madvise(0xC000116000, 0x2000, 0x8)		 = 0 0
fcntl(0x0, 0x3, 0x0)		 = 2 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
madvise(0xC000118000, 0x2000, 0x8)		 = 0 0
madvise(0xC00011A000, 0x2000, 0x8)		 = 0 0
madvise(0xC00011C000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
psynch_cvsignal(0xC000080388, 0x20000000300, 0x200)		 = 257 0
psynch_cvwait(0xC000080388, 0x20100000300, 0x200)		 = 0 0
mmap(0x0, 0x40000, 0x3, 0x1002, 0xFFFFFFFFFFFFFFFF, 0x0)		 = 0x108F26000 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
fcntl(0x1, 0x3, 0x0)		 = 1 0
fcntl(0x2, 0x3, 0x0)		 = 1 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
psynch_cvsignal(0xC000040F88, 0x100, 0x0)		 = 257 0
madvise(0xC00011E000, 0x2000, 0x8)		 = 0 0
psynch_cvwait(0xC000040F88, 0x100000100, 0x0)		 = 0 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
stat64(".\0", 0xC000106858, 0x0)		 = 0 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
stat64("/Users/zjjfly/GoProjects/src/github.com/zjjfly/MasteringGo\0", 0xC0001069F8, 0x0)		 = 0 0
psynch_cvsignal(0xC000040F88, 0x10000000200, 0x100)		 = 257 0
psynch_cvwait(0xC000040F88, 0x10100000200, 0x100)		 = 0 0
psynch_cvsignal(0xC000040388, 0x100, 0x0)		 = 257 0
psynch_cvwait(0xC000040388, 0x100000100, 0x0)		 = 0 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
madvise(0xC000120000, 0x2000, 0x8)		 = 0 0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
__pthread_sigmask(0x3, 0x10219C0F0, 0x0)		 = 0 k0
sigaltstack(0x7FFEEDBD3878, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFEEDBD38BC, 0x0)		 = 0 k0
__pthread_sigmask(0x3, 0x0, 0xC000040080)		 = 0 k0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
__pthread_sigmask(0x3, 0x10219C0F0, 0x0)		 = 0 k0
sigaltstack(0x0, 0x7FFEEDBD3840, 0x0)		 = 0 0
sigaltstack(0x7FFEEDBD3800, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFEEDBD3854, 0x0)		 = 0 k0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
__pthread_sigmask(0x3, 0x10219C0F0, 0x0)		 = 0 k0
sigaltstack(0x7FFEEDBD3858, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFEEDBD389C, 0x0)		 = 0 k0
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
__semwait_signal(0x1403, 0x0, 0x1)		 = -1 60
psynch_cvwait(0x1021B23A8, 0x20100000300, 0x200)		 = -1 260
psynch_cvwait(0xC000040B88, 0x100000100, 0x0)		 = -1 260
psynch_cvwait(0xC000040F88, 0x20100000300, 0x200)		 = -1 260
psynch_cvwait(0xC000080388, 0x30100000400, 0x300)		 = -1 260
psynch_cvwait(0xC000041388, 0x100000100, 0x0)		 = -1 260

CALL                                        COUNT
access                                          1
bsdthread_register                              1
exit                                            1
fstat64                                         1
getpid                                          1
getrlimit                                       1
issetugid                                       1
proc_info                                       1
psynch_cvbroad                                  1
sysctlbyname                                    1
write                                           1
write_nocancel                                  1
__pthread_kill                                  2
csops_audittoken                                2
getentropy                                      2
psynch_cvclrprepost                             2
read                                            2
sysctl                                          2
close                                           3
fcntl                                           3
ioctl                                           3
open                                            3
stat64                                          3
bsdthread_create                                6
thread_selfid                                   6
psynch_cvsignal                                 8
mprotect                                       10
psynch_cvwait                                  14
sigaltstack                                    18
mmap                                           20
__pthread_sigmask                              27
__semwait_signal                               27
sigaction                                      29
madvise                                        55

